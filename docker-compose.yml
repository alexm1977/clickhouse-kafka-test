version: "3.7"

#volumes:
#    kafka: {}
#    click: {}

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3
    user: root
    ports:
      - 2181:2181
#    volumes:
#      - ./zd:/bitnami/zookeeper
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:latest
    user: root
    ports:
      - 9092:9092
    #    volumes:
    #      - ./kd:/bitnami/kafka
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092,192.168.1.210:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  server:
    image: yandex/clickhouse-server
    ports:
      - "8123:8123"
      - "9000:9000"
      - "9009:9009"
    ulimits:
      nproc: 65535
      nofile:
        soft: 262144
        hard: 262144
    volumes:
      - ./log/ch/:/var/log/clickhouse-server/

#  prometheus:
#    image: prom/prometheus
#    ports:
#      - "9090:9090"
#    links:
#      - zeebe-1
#    volumes:
#      - "./prometheus.yml:/etc/prometheus/prometheus.yml"
#    deploy:
#      resources:
#        limits:
#          cpus: '1'
#
#  grafana:
#    image: grafana/grafana:latest
#    environment:
#        - GF_SECURITY_ADMIN_PASSWORD=pass
#    depends_on:
#        - prometheus
#    ports:
#        - "3000:3000"
#    volumes:
#        - ./grafana/provisioning/:/etc/grafana/provisioning/
#        - ./grafana/conf/grafana.ini:/etc/grafana/grafana.ini
#    deploy:
#      resources:
#        limits:
#          cpus: '1'

#  uploader:
#     image: adoptopenjdk:14-jre-hotspot
#     volumes:
#         - ./uploader/:/opt/zeebe/
#     command: sh -c "java -Dapp.brokerUrl=gateway:26500 -jar /opt/zeebe/target/starter.jar"
#     deploy:
#      resources:
#        limits:
#          cpus: '1'
#
#  worker:
#     image: adoptopenjdk:14-jre-hotspot
#     volumes:
#         - ./worker:/opt/zeebe
#     command: sh -c "java -Dapp.brokerUrl=gateway:26500 -jar /opt/zeebe/target/worker.jar"
#     deploy:
#      resources:
#        limits:
#          cpus: '1'
